@model IEnumerable<Inmobiliaria10.Models.Contrato>
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Linq

@{
    ViewData["Title"] = "Contratos";

    var total = (int?)ViewBag.Total ?? 0;
    var page = (int?)ViewBag.Page ?? 1;
    var pageSize = (int?)ViewBag.PageSize ?? 20;
    var totalPages = (int)Math.Ceiling((double)total / pageSize);

    var tipoSel      = Context.Request.Query["tipo"].ToString();
    var inmuebleSel  = Context.Request.Query["inmueble"].ToString();
    var inquilinoSel = Context.Request.Query["inquilino"].ToString();
    var soloActivosSel = (bool?)ViewBag.SoloActivos;
    var soloActivosRoute = (soloActivosSel.HasValue && soloActivosSel.Value) ? "true" : null;

    var inmList = (IEnumerable<SelectListItem>)ViewBag.Inmuebles;
    var inmMap = inmList?.ToDictionary(x => x.Value, x => x.Text) ?? new Dictionary<string,string>();

    var inqList = (IEnumerable<SelectListItem>)ViewBag.Inquilinos;
    var inqMap = inqList?.ToDictionary(x => x.Value, x => x.Text) ?? new Dictionary<string,string>();


    var firstId = 0;
    foreach (var row in Model) { firstId = row.IdContrato; break; }
    var hayContratos = firstId > 0;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0">Contratos</h2>

    <div class="d-flex gap-2">
        <!-- Auditoría (negro) -->
        @if (hayContratos)
        {
            <a class="btn btn-dark" asp-action="Auditoria" asp-route-id="@firstId">Auditoría</a>
        }
        else
        {
            <a class="btn btn-dark disabled" aria-disabled="true" tabindex="-1">Auditoría</a>
        }

        <!-- Nuevo contrato (verde) -->
        <a class="btn btn-success"
           asp-action="Crear"
           asp-route-tipo="@tipoSel"
           asp-route-inmueble="@inmuebleSel"
           asp-route-inquilino="@inquilinoSel">
            Nuevo contrato
        </a>
    </div>
</div>

@if (TempData["Ok"] is string okMsg)
{
    <div class="alert alert-success">@okMsg</div>
}
@if (TempData["Err"] is string errMsg)
{
    <div class="alert alert-danger">@errMsg</div>
}

<form method="get" class="row g-2 mb-3">
    <div class="col-12 col-md-2">
        <label class="form-label">Tipo</label>
        @Html.DropDownList("tipo", (SelectList)ViewBag.Tipos, "Todos",
            new { @class="form-select", id="tipoSelect" })
    </div>
    <div class="col-12 col-md-4">
        <label class="form-label">Inmueble</label>
        @Html.DropDownList("inmueble", (SelectList)ViewBag.Inmuebles, "Todos",
            new { @class="form-select", id="inmuebleSelect" })
    </div>
    <div class="col-12 col-md-3">
        <label class="form-label">Inquilino</label>
        @Html.DropDownList("inquilino", (SelectList)ViewBag.Inquilinos, "Todos",
            new { @class="form-select", id="inquilinoSelect" })
    </div>
    <div class="col-6 col-md-2 d-flex align-items-end">
        <div class="form-check">
            @{
                var soloActivosSel = (bool?)ViewBag.SoloActivos ?? true;
            }
            <input class="form-check-input" type="checkbox" name="soloActivos" value="true" @(soloActivosSel ? "checked" : "") />
            <label class="form-check-label">Solo Vigentes</label>
        </div>
    </div>
    <div class="col-6 col-md-1 d-flex align-items-end">
        <button class="btn btn-dark w-100" type="submit">Filtrar</button>
    </div>
</form>

<table class="table table-striped align-middle">
    <thead>
        <tr>
            <th>Tipo</th>
            <th>Domicilio</th>
            <th>Inquilino</th>
            <th>Inicio</th>
            <th>Fin</th>
            <th>Rescisión</th>
            <th class="text-end">Acciones</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var c in Model)
    {
        var inmTxt = inmMap.TryGetValue(c.IdInmueble.ToString(), out var _inm) ? _inm : c.IdInmueble.ToString();
        var inqTxt = inqMap.TryGetValue(c.IdInquilino.ToString(), out var _inq) ? _inq : c.IdInquilino.ToString();
        var tipoInmuebleTxt = ViewBag.TipoMap[c.IdInmueble.ToString()];
        

        <tr>
            <td>@tipoInmuebleTxt</td> 
            <td>@inmTxt</td>
            <td>@inqTxt</td>
            <td>@c.FechaInicio.ToString("yyyy-MM-dd")</td>
            <td>@c.FechaFin.ToString("yyyy-MM-dd")</td>
            <td>@(c.Rescision?.ToString("yyyy-MM-dd") ?? "-")</td>
            <td class="text-end">
                <div class="btn-group" role="group" aria-label="acciones">
                    <a class="btn btn-sm btn-primary" title="Ver"
                    asp-action="Detalles" asp-route-id="@c.IdContrato"><i class="fa-solid fa-eye"></i></a>
                    <a class="btn btn-sm btn-warning" title="Editar"
                    asp-action="Editar" asp-route-id="@c.IdContrato"><i class="fa-solid fa-pen"></i></a>
                    <a class="btn btn-sm btn-danger" title="Dar de baja"
                    asp-action="Eliminar" asp-route-id="@c.IdContrato"><i class="fa-solid fa-trash-can"></i></a>
                </div>
            </td>
        </tr>
    }


    </tbody>
</table>

@if (totalPages > 1)
{
    <nav aria-label="Paginación">
        <ul class="pagination">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i==page ? "active" : "")">
                    <a class="page-link"
                    asp-action="Index"
                    asp-route-page="@i"
                    asp-route-pageSize="@pageSize"
                    asp-route-tipo="@tipoSel"
                    asp-route-inmueble="@inmuebleSel"
                    asp-route-inquilino="@inquilinoSel"
                    asp-route-soloActivos="@soloActivosRoute">@i</a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts{
    <!-- jQuery + Select2 (solo para esta vista) -->
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
    <link  href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet"/>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.full.min.js"></script>

    <script>
    $(function () {
      // Inicializar Select2 en Inquilino e Inmueble
      const $inq = $('#inquilinoSelect').select2({
        width: '100%', placeholder: 'Todos', allowClear: true,
        language: { noResults: ()=>'Sin resultados', searching:()=> 'Buscando…' }
      });

      const $inm = $('#inmuebleSelect').select2({
        width: '100%', placeholder: 'Todos', allowClear: true,
        language: { noResults: ()=>'Sin resultados', searching:()=> 'Buscando…' }
      });

      // Cascada: Tipo -> Inmueble (refresca opciones y Select2)
      $('#tipoSelect').on('change', async function () {
        const idTipo = this.value;
        const $sel = $('#inmuebleSelect');

        // limpiar y deshabilitar mientras carga
        $sel.prop('disabled', true);
        $sel.empty().append(new Option('Todos', '', true, false));

        try {
          if (idTipo) {
            const resp = await fetch(`/Contrato/InmueblesPorTipo?idTipo=${encodeURIComponent(idTipo)}`);
            if (!resp.ok) throw new Error('HTTP ' + resp.status);
            const data = await resp.json(); // [{id, texto}]
            data.forEach(x => $sel.append(new Option(x.texto, x.id)));
          }
        } catch (e) {
          console.error(e);
        }

        // re-habilitar y refrescar Select2
        $sel.prop('disabled', false).trigger('change.select2');
      });
    });
    </script>

    <!-- Ajuste visual para que Select2 tenga altura de form-control -->
    <style>
      .select2-container .select2-selection--single { height: 38px; }
      .select2-container--default .select2-selection--single .select2-selection__rendered { line-height: 38px; }
      .select2-container--default .select2-selection--single .select2-selection__arrow { height: 38px; }
    </style>
}